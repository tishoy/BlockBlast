{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/Grid.ts"],"names":["_decorator","Component","resources","Sprite","SpriteFrame","ColorEnum","GameController","Block","ccclass","property","Grid","color","filled","start","update","deltaTime","test","hide","node","active","show","Instance","currentBlock","getComponent","load","COLOR_RES","err","asset","getChildByName","spriteFrame","Filled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AAChDC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;sBAGjBU,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BT,SAD1B,CACoC;AAAA;AAAA;AAAA,eAEhCU,KAFgC;AAAA,eAGxBC,MAHwB,GAGf,KAHe;AAAA;;AAKhCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEMC,QAAAA,IAAI,GAAG;AACV,iBAAO,KAAKJ,MAAZ;AACH;;AAEMK,QAAAA,IAAI,GAAG;AACV,eAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA,eAAKP,MAAL,GAAc,KAAd;AACA,eAAKD,KAAL,GAAa,CAAC,CAAd;AACH;;AAEMS,QAAAA,IAAI,GAAG;AACV;AACA,eAAKR,MAAL,GAAc,IAAd;AAEA,cAAID,KAAK,GAAG;AAAA;AAAA,gDAAeU,QAAf,CAAwBC,YAAxB,CAAqCC,YAArC;AAAA;AAAA,8BAAyDZ,KAArE;AAEA,eAAKA,KAAL,GAAaA,KAAb;AACAT,UAAAA,SAAS,CAACsB,IAAV,CAAe,aAAa;AAAA;AAAA,sCAAUC,SAAV,CAAoBd,KAApB,CAAb,GAA0C,cAAzD,EAAyEP,WAAzE,EAAsF,CAACsB,GAAD,EAAMC,KAAN,KAAgB;AAClG,iBAAKT,IAAL,CAAUU,cAAV,CAAyB,MAAzB,EAAiCL,YAAjC,CAA8CpB,MAA9C,EAAsD0B,WAAtD,GAAoEF,KAApE;AACA,iBAAKT,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACH,WAHD;AAKH;;AAEgB,YAANW,MAAM,GAAG;AAChB,iBAAO,KAAKlB,MAAZ;AACH;;AAtC+B,O","sourcesContent":["import { _decorator, Component, Node, resources, Sprite, SpriteFrame, UIOpacity } from 'cc';\nimport { ColorEnum } from './ColorEnum';\nimport { GameController } from './GameController';\nimport { Block } from './Block';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Grid')\nexport class Grid extends Component {\n\n    color;\n    private filled = false;\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    public test() {\n        return this.filled;\n    }\n\n    public hide() {\n        this.node.active = false;\n        this.filled = false;\n        this.color = -1;\n    }\n\n    public show() {\n        // this.node.getChildByName(\"Grid\").getComponent(Sprite)\n        this.filled = true;\n\n        let color = GameController.Instance.currentBlock.getComponent(Block).color;\n\n        this.color = color;\n        resources.load('texture/' + ColorEnum.COLOR_RES[color] + \"/spriteFrame\", SpriteFrame, (err, asset) => {\n            this.node.getChildByName(\"Grid\").getComponent(Sprite).spriteFrame = asset;\n            this.node.active = true;\n        });\n\n    }\n\n    public get Filled() {\n        return this.filled;\n    }\n}\n\n"]}