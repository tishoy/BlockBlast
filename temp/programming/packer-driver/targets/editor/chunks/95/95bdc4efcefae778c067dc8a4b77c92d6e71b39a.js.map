{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/GameController.ts"],"names":["GameController","GameArea","Block","constructor","currentBlock","blockUsing","gameArea","instance","console","log","Instance","test","pos","block","getComponent","testBlock","add","index","addBlock","rows","checkRow","cols","checkCol","blastGrids","i","length","j","listAdd","use","Index","allUsed","dispatchEvent","Event","list","value","indexOf","push"],"mappings":"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","sourcesContent":["import { Game, Node } from 'cc';\nimport { GameArea } from './GameArea';\nimport { Block } from './Block';\n\nexport class GameController {\n    constructor() {\n        if (GameController.instance != null) {\n            console.log(\"singlon instance error\")\n        }\n    }\n\n    private static instance: GameController = null;\n\n    public static get Instance() {\n        if (this.instance == null) {\n            this.instance = new GameController();\n        }\n        return GameController.instance;\n    }\n\n    public currentBlock;\n\n    public blockUsing = [0, 0, 0];\n\n    gameArea: GameArea;\n\n    public test(pos, block) {\n        return this.gameArea.getComponent(GameArea).testBlock(pos, block);\n    }\n\n    public add(index, block) {\n        this.gameArea.getComponent(GameArea).addBlock(index, block);\n\n        let rows = this.gameArea.getComponent(GameArea).checkRow();\n        let cols = this.gameArea.getComponent(GameArea).checkCol();\n\n        console.log(rows);\n        console.log(cols);\n\n        let blastGrids = [];\n        for (let i = 0; i < rows.length; i++) {\n            for (let j = 0; j < 8; j++) {\n                this.listAdd(blastGrids, i * 8 + j);\n            }\n\n        }\n\n        for (let i = 0; i < cols.length; i++) {\n            for (let j = 0; j < 8; j++) {\n                this.listAdd(blastGrids, i + j * 8);\n            }\n        }\n\n        console.log(blastGrids);\n\n        this.currentBlock.getComponent(Block).use();\n        this.blockUsing[this.currentBlock.getComponent(Block).Index] = 1;\n        console.log(this.currentBlock.getComponent(Block));\n        let allUsed = true;\n        console.log(\"123\");\n        for (let i = 0; i < this.blockUsing.length; i++) {\n            console.log(this.blockUsing[i]);\n            if (this.blockUsing[i] == 0) {\n                allUsed = false;\n                break;\n            }\n        }\n        console.log(\"结果\" + allUsed);\n        if (allUsed) {\n            for (let i = 0; i < this.blockUsing.length; i++) {\n                this.blockUsing[i] = 0;\n            }\n            dispatchEvent(new Event(\"resetBlock\"));\n        }\n    }\n\n    public listAdd(list, value) {\n        if (list.indexOf(value) == -1) {\n            list.push(value);\n        }\n    }\n\n}"]}