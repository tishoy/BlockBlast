{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/BlockEnum.ts"],"names":["BlockEnum","randomRotation","type","Math","floor","ROTATION","length","random","getRotation","rotation","row","ROW","getDataByType","I1X2","P1X1","Q2X2","I1X3","L2X2","O2X2","T3X2","I1X4","L2X3","J2X3","S3X2","Z3X2","I1X5","L3X3","M3X2","G3X3"],"mappings":"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","sourcesContent":["export class BlockEnum {\n    /**\n     * 000\n     * 010\n     * 000\n     */\n    static P1X1 = 0;\n    /**\n     * 000\n     * 010\n     * 010\n     * 000\n     */\n    static I1X2 = 1;\n    /**\n     * 0000\n     * 0100\n     * 0010\n     * 0000\n     */\n    static Q2X2 = 2;\n    /**\n    * 000\n    * 010\n    * 010\n    * 010\n    * 000\n    */\n    static I1X3 = 3;\n    /**\n    * 0000\n    * 0100\n    * 0110\n    * 0000\n    */\n    static L2X2 = 4;\n    /**\n    * 0000\n    * 0110\n    * 0110\n    * 0000\n    */\n    static O2X2 = 5;\n    /**\n     * 00000\n     * 01110\n     * 00100\n     * 00000\n     */\n    static T3X2 = 6;\n    /**\n     * 000\n     * 010\n     * 010\n     * 010\n     * 010\n     * 000\n     */\n    static I1X4 = 7;\n    /**\n     * 0000\n     * 0100\n     * 0100\n     * 0110\n     * 0000\n     */\n    static L2X3 = 8;\n    /**\n     * 0000\n     * 0010\n     * 0010\n     * 0110\n     * 0000\n     */\n    static J2X3 = 9;\n    /**\n     * 00000\n     * 00110\n     * 01100\n     * 00000\n     */\n    static S3X2 = 10;\n    /**\n     * 00000\n     * 01100\n     * 00110\n     * 00000\n     */\n    static Z3X2 = 11;\n    /**\n     * 000\n     * 010\n     * 010\n     * 010\n     * 010\n     * 010\n     * 000\n     */\n    static I1X5 = 12;\n    /**\n    * 00000\n    * 01000\n    * 01000\n    * 01110\n    * 00000\n    */\n    static L3X3 = 13;\n    /**\n     * 00000\n     * 01110\n     * 01110\n     * 00000\n     */\n    static M3X2 = 14;\n    /**\n     * 00000\n     * 01110\n     * 01110\n     * 01110\n     * 00000\n     */\n    static G3X3 = 15;\n\n    // BlockEnum.ROTATION\n    static ROTATION = [\n        [[0]],\n        [[0, 8], [0, 1]],\n        [[0, 9], [0, 7]],\n        [[0, 8, 16], [0, 1, 2]],\n        [[0, 8, 9], [0, 7, 8]],\n        [[0, 1, 8, 9]],\n        [[0, 7, 8, 9], [0, 8, 9, 16], [0, 1, 2, 9], [1, 2, 3, 9]],\n        [[0, 8, 16, 24], [0, 1, 2, 3]],\n        [[0, 1, 9, 17], [0, 6, 7, 8], [0, 8, 16, 17], [0, 1, 2, 8]],\n        [[0, 1, 8, 16], [0, 1, 2, 10], [0, 8, 15, 16], [0, 8, 9, 10]],\n        [[0, 1, 7, 8], [0, 8, 9, 17]],\n        [[0, 1, 9, 10], [0, 7, 8, 15]],\n        [[0, 8, 16, 24, 32], [0, 1, 2, 3, 4]],\n        [[0, 8, 16, 17, 18], [0, 1, 2, 8, 16], [0, 1, 2, 10, 18], [0, 8, 14, 15, 16]],\n        [[0, 1, 2, 8, 9, 10], [0, 1, 8, 9, 16, 17]],\n        [[0, 1, 2, 8, 9, 10, 16, 17, 18]],\n    ];\n\n    static ROW = [\n        [[0]],\n        [[0, 1], [0, 0]],\n        [[0, 1], [0, 1]],\n        [[0, 1, 2], [0, 0, 0]],\n        [[0, 1, 1], [0, 1, 1]],\n        [[0, 0, 1, 1]],\n        [[0, 1, 1, 1], [0, 1, 1, 2], [0, 0, 0, 1], [0, 0, 0, 1]],\n        [[0, 1, 2, 3], [0, 0, 0, 0]],\n        [[0, 0, 1, 2], [0, 1, 1, 1], [0, 1, 2, 2], [0, 0, 0, 1]],\n        [[0, 0, 1, 2], [0, 0, 0, 1], [0, 1, 2, 2], [0, 1, 1, 1]],\n        [[0, 0, 1, 1], [0, 1, 1, 2]],\n        [[0, 0, 1, 1], [0, 1, 1, 2]],\n        [[0, 1, 2, 3, 4], [0, 0, 0, 0, 0]],\n        [[0, 1, 2, 2, 2], [0, 0, 0, 1, 2], [0, 0, 0, 1, 2], [0, 1, 2, 2, 2]],\n        [[0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 2, 2]],\n        [[0, 0, 0, 1, 1, 1, 2, 2, 2]],\n    ]\n\n    // BlockEnum.ROTATION[BlockEnum.I1X2] = [0];\n\n    static randomRotation(type) {\n        return Math.floor(this.ROTATION[type].length * Math.random());\n    }\n\n    static getRotation(type, rotation) {\n        return {\n            rotation: this.ROTATION[type][rotation],\n            row: this.ROW[type][rotation]\n        };\n    }\n\n    static getDataByType(type) {\n        switch (type) {\n\n            case BlockEnum.I1X2:\n                return\n        }\n\n    }\n}"]}