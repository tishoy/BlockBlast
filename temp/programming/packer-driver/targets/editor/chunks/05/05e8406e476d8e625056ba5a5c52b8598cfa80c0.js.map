{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/Block.ts"],"names":["_decorator","CCInteger","Component","instantiate","NodeEventType","Prefab","UITransform","Vec2","Vec3","BlockEnum","GameController","ccclass","property","Block","type","rotation","grids","used","width","height","start","generate","node","on","TOUCH_START","touchStart","data","getRotation","getComponent","i","length","GridPrefab","x","y","Math","floor","setPosition","addChild","push","addEventListener","reset","random","randomRotation","event","off","TOUCH_CANCEL","touchCancel","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","console","log","Instance","currentBlock","touch","_point","_startPoint","block","result","test","getPosition","canAdd","add","index","update","deltaTime","isUsed","use","active","Index"],"mappings":"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","sourcesContent":["import { _decorator, CCInteger, Component, instantiate, Node, NodeEventType, Prefab, UIOpacity, UITransform, Vec2, Vec3 } from 'cc';\nimport { BlockEnum } from './BlockEnum';\nimport { GameController } from './GameController';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Block')\nexport class Block extends Component {\n\n\n    type;\n    rotation = 0;\n\n    @property({\n        type: Prefab,\n    })\n    GridPrefab: Prefab;\n\n    @property({\n        type: CCInteger,\n    })\n    Index;\n\n    grids = [];\n\n    used;\n\n    width = 0;\n    height = 0;\n\n    start() {\n        this.generate();\n\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n\n        let data = BlockEnum.getRotation(this.type, this.rotation);\n\n        this.width = 160;\n        this.height = 160;\n\n        this.node.getComponent(UITransform).width = 80 * 2;\n        this.node.getComponent(UITransform).height = 80 * 2;\n\n        for (let i = 0; i < data.length; i++) {\n            let node = instantiate(this.GridPrefab);\n            let x = (data[i] % 8) * 80 + 40;\n            let y = Math.floor(data[i] / 8) * 80 + 40;\n            node.setPosition(new Vec3(x, y, 0));\n            this.node.addChild(node);\n\n            this.grids.push(node);\n        }\n\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n        addEventListener(\"resetBlock\", () => {\n            this.reset()\n        })\n    }\n\n    public generate() {\n        this.type = Math.floor(Math.random() * 16);\n        this.rotation = BlockEnum.randomRotation(this.type)\n    }\n\n    public touchStart(event) {\n        this.node.off(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.on(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.on(NodeEventType.TOUCH_MOVE, this.touchMove, this, true);\n        this.node.on(NodeEventType.TOUCH_END, this.touchEnd, this);\n        console.log(\"start\");\n        GameController.Instance.currentBlock = this.node;\n    }\n\n    public touchMove(event) {\n        // console.log(event.touch);\n        this.node.setPosition(new Vec3(event.touch._point.x - 480,\n            event.touch._point.y - event.touch._startPoint.y));\n    }\n\n    public touchEnd(event) {\n        console.log(\"end\");\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.off(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.off(NodeEventType.TOUCH_MOVE, this.touchMove, this);\n        this.node.off(NodeEventType.TOUCH_END, this.touchEnd, this);\n\n        let block = { type: this.type, rotation: this.rotation };\n        let result = GameController.Instance.test(new Vec2(this.node.getPosition().x, this.node.getPosition().y - this.height),\n            block);\n        console.log(\"能放\" + result.canAdd);\n        if (result.canAdd) {\n            GameController.Instance.add(result.index, block);\n        }\n    }\n\n    public touchCancel(event) {\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.off(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.off(NodeEventType.TOUCH_MOVE, this.touchMove, this);\n        this.node.off(NodeEventType.TOUCH_END, this.touchEnd, this);\n\n        let block = { type: this.type, rotation: this.rotation };\n        let result = GameController.Instance.test(new Vec2(this.node.getPosition().x, this.node.getPosition().y - this.height),\n            block);\n        console.log(\"能放\" + result.canAdd);\n        if (result.canAdd) {\n            GameController.Instance.add(result.index, block);\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    public isUsed() {\n        return this.used;\n    }\n\n    public use() {\n        this.node.active = false;\n    }\n\n    public reset() {\n        this.node.setPosition((this.Index - 1) * (-200), -100);\n        // this.node.getComponent(UIOpacity).opacity = 255;\n        this.node.active = true;\n    }\n\n\n}\n\n"]}