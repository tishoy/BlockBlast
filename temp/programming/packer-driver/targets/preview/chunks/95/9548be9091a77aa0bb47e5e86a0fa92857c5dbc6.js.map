{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/GameController.ts"],"names":["GameController","GameArea","Block","constructor","currentBlock","blockUsing","gameArea","instance","console","log","Instance","resetBlock","getComponent","reset","Index","test","pos","block","testBlock","add","index","addBlock","rows","checkRow","cols","checkCol","blastGrids","i","length","j","listAdd","blast","use","allUsed","dispatchEvent","Event","list","value","indexOf","push"],"mappings":"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","sourcesContent":["import { Game, Node } from 'cc';\nimport { GameArea } from './GameArea';\nimport { Block } from './Block';\n\nexport class GameController {\n    constructor() {\n        if (GameController.instance != null) {\n            console.log(\"singlon instance error\")\n        }\n    }\n\n    private static instance: GameController = null;\n\n    public static get Instance() {\n        if (this.instance == null) {\n            this.instance = new GameController();\n        }\n        return GameController.instance;\n    }\n\n    public currentBlock;\n\n    public blockUsing = [0, 0, 0];\n\n    public resetBlock() {\n        this.currentBlock.getComponent(Block).reset();\n        this.blockUsing[this.currentBlock.getComponent(Block).Index] = 0;\n    }\n\n    gameArea: GameArea;\n\n    public test(pos, block) {\n        return this.gameArea.getComponent(GameArea).testBlock(pos, block);\n    }\n\n    public add(index, block) {\n        this.gameArea.getComponent(GameArea).addBlock(index, block);\n\n        let rows = this.gameArea.getComponent(GameArea).checkRow();\n        let cols = this.gameArea.getComponent(GameArea).checkCol();\n\n        console.log(rows);\n        console.log(cols);\n\n        let blastGrids = [];\n        for (let i = 0; i < rows.length; i++) {\n            for (let j = 0; j < 8; j++) {\n                this.listAdd(blastGrids, rows[i] * 8 + j);\n            }\n\n        }\n\n        for (let i = 0; i < cols.length; i++) {\n            for (let j = 0; j < 8; j++) {\n                this.listAdd(blastGrids, cols[i] + j * 8);\n            }\n        }\n\n        console.log(blastGrids);\n        for (let i = 0; i < blastGrids.length; i++) {\n            this.gameArea.getComponent(GameArea).blast(blastGrids[i]);\n        }\n\n\n        this.currentBlock.getComponent(Block).use();\n        this.blockUsing[this.currentBlock.getComponent(Block).Index] = 1;\n        console.log(this.currentBlock.getComponent(Block));\n        let allUsed = true;\n        console.log(\"123\");\n        for (let i = 0; i < this.blockUsing.length; i++) {\n            console.log(this.blockUsing[i]);\n            if (this.blockUsing[i] == 0) {\n                allUsed = false;\n                break;\n            }\n        }\n        console.log(\"结果\" + allUsed);\n        if (allUsed) {\n            for (let i = 0; i < this.blockUsing.length; i++) {\n                this.blockUsing[i] = 0;\n            }\n            dispatchEvent(new Event(\"resetBlock\"));\n        }\n    }\n\n    public listAdd(list, value) {\n        if (list.indexOf(value) == -1) {\n            list.push(value);\n        }\n    }\n\n}"]}