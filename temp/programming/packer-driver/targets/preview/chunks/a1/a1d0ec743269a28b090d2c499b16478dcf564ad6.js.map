{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/Grid.ts"],"names":["_decorator","Component","resources","Sprite","SpriteFrame","UIOpacity","ColorEnum","ccclass","property","Grid","color","filled","start","update","deltaTime","test","hide","node","getComponent","opacity","show","load","COLOR_RES","err","asset","getChildByName","spriteFrame","Filled"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;;AAC7DC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;sBAGjBS,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BR,SAD1B,CACoC;AAAA;AAAA;AAAA,eAEhCS,KAFgC;AAAA,eAGxBC,MAHwB,GAGf,KAHe;AAAA;;AAKhCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEMC,QAAAA,IAAI,GAAG;AACV,iBAAO,KAAKJ,MAAZ;AACH;;AAEMK,QAAAA,IAAI,GAAG;AACV,eAAKC,IAAL,CAAUC,YAAV,CAAuBb,SAAvB,EAAkCc,OAAlC,GAA4C,CAA5C;AACA,eAAKR,MAAL,GAAc,KAAd;AACH;;AAEMS,QAAAA,IAAI,GAAG;AACV;AACA,eAAKT,MAAL,GAAc,IAAd;AAEAT,UAAAA,SAAS,CAACmB,IAAV,CAAe,aAAa;AAAA;AAAA,sCAAUC,SAAV,CAAoB,KAAKZ,KAAzB,CAAb,GAA+C,cAA9D,EAA8EN,WAA9E,EAA2F,CAACmB,GAAD,EAAMC,KAAN,KAAgB;AAEvG,iBAAKP,IAAL,CAAUQ,cAAV,CAAyB,MAAzB,EAAiCP,YAAjC,CAA8Cf,MAA9C,EAAsDuB,WAAtD,GAAoEF,KAApE;AACH,WAHD;AAIA,eAAKP,IAAL,CAAUC,YAAV,CAAuBb,SAAvB,EAAkCc,OAAlC,GAA4C,GAA5C;AAEH;;AAEgB,YAANQ,MAAM,GAAG;AAChB,iBAAO,KAAKhB,MAAZ;AACH;;AAnC+B,O","sourcesContent":["import { _decorator, Component, Node, resources, Sprite, SpriteFrame, UIOpacity } from 'cc';\nimport { ColorEnum } from './ColorEnum';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Grid')\nexport class Grid extends Component {\n\n    color;\n    private filled = false;\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    public test() {\n        return this.filled;\n    }\n\n    public hide() {\n        this.node.getComponent(UIOpacity).opacity = 0;\n        this.filled = false;\n    }\n\n    public show() {\n        // this.node.getChildByName(\"Grid\").getComponent(Sprite)\n        this.filled = true;\n\n        resources.load('texture/' + ColorEnum.COLOR_RES[this.color] + \"/spriteFrame\", SpriteFrame, (err, asset) => {\n\n            this.node.getChildByName(\"Grid\").getComponent(Sprite).spriteFrame = asset;\n        });\n        this.node.getComponent(UIOpacity).opacity = 255;\n\n    }\n\n    public get Filled() {\n        return this.filled;\n    }\n}\n\n"]}