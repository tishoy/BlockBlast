{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/GameController.ts"],"names":["GameController","GameArea","constructor","currentBlock","blockUsing","gameArea","instance","console","log","Instance","test","pos","block","getComponent","testBlock","add","index","addBlock","used","allUsed","i","length","dispatchEvent","Event"],"mappings":";;;yFAGaA,c;;;;;;;;;;;;;;;;AAFJC,MAAAA,Q,iBAAAA,Q;;;;;;;;;gCAEID,c,GAAN,MAAMA,cAAN,CAAqB;AACxBE,QAAAA,WAAW,GAAG;AAAA,eAePC,YAfO;AAAA,eAiBPC,UAjBO,GAiBM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAjBN;AAAA,eAmBdC,QAnBc;;AACV,cAAIL,cAAc,CAACM,QAAf,IAA2B,IAA/B,EAAqC;AACjCC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACJ;;AAIyB,mBAARC,QAAQ,GAAG;AACzB,cAAI,KAAKH,QAAL,IAAiB,IAArB,EAA2B;AACvB,iBAAKA,QAAL,GAAgB,IAAIN,cAAJ,EAAhB;AACH;;AACD,iBAAOA,cAAc,CAACM,QAAtB;AACH;;AAQMI,QAAAA,IAAI,CAACC,GAAD,EAAMC,KAAN,EAAa;AACpB,eAAKP,QAAL,CAAcQ,YAAd;AAAA;AAAA,oCAAqCC,SAArC,CAA+CH,GAA/C,EAAoDC,KAApD,EADoB,CAKpB;AACH;;AAEMG,QAAAA,GAAG,CAACC,KAAD,EAAQJ,KAAR,EAAe;AACrB,eAAKP,QAAL,CAAcQ,YAAd;AAAA;AAAA,oCAAqCI,QAArC,CAA8CD,KAA9C,EAAqDJ,KAArD;AACA,eAAKT,YAAL,CAAkBe,IAAlB,GAAyB,IAAzB;AACA,eAAKd,UAAL,CAAgB,KAAKD,YAAL,CAAkBa,KAAlC,IAA2C,CAA3C;AACA,cAAIG,OAAO,GAAG,IAAd;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhB,UAAL,CAAgBiB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,gBAAI,KAAKhB,UAAL,CAAgBgB,CAAhB,KAAsB,CAA1B,EAA6B;AACzBD,cAAAA,OAAO,GAAG,KAAV;AACA;AACH;AACJ;;AACD,cAAIA,OAAJ,EAAa;AACTG,YAAAA,aAAa,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAAb;AACH;AACJ;;AA5CuB,O;;AAAfvB,MAAAA,c,CAOMM,Q,GAA2B,I","sourcesContent":["import { Node } from 'cc';\nimport { GameArea } from './GameArea';\n\nexport class GameController {\n    constructor() {\n        if (GameController.instance != null) {\n            console.log(\"singlon instance error\")\n        }\n    }\n\n    private static instance: GameController = null;\n\n    public static get Instance() {\n        if (this.instance == null) {\n            this.instance = new GameController();\n        }\n        return GameController.instance;\n    }\n\n    public currentBlock;\n\n    public blockUsing = [0, 0, 0];\n\n    gameArea: Node;\n\n    public test(pos, block) {\n        this.gameArea.getComponent(GameArea).testBlock(pos, block);\n\n\n\n        // this.add(targetPos, block)\n    }\n\n    public add(index, block) {\n        this.gameArea.getComponent(GameArea).addBlock(index, block);\n        this.currentBlock.used = true;\n        this.blockUsing[this.currentBlock.index] = 1;\n        let allUsed = true;\n        for (let i = 0; i < this.blockUsing.length; i++) {\n            if (this.blockUsing[i] == 0) {\n                allUsed = false;\n                break;\n            }\n        }\n        if (allUsed) {\n            dispatchEvent(new Event(\"resetBlock\"));\n        }\n    }\n\n}"]}