{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/Block.ts"],"names":["_decorator","Component","instantiate","NodeEventType","Prefab","UIOpacity","UITransform","Vec3","BlockEnum","GameController","ccclass","property","Block","type","Math","floor","random","rotation","grids","width","height","start","node","on","TOUCH_START","touchStart","data","getRotation","getComponent","console","log","i","length","GridPrefab","x","y","setPosition","addChild","opacity","push","event","off","TOUCH_CANCEL","touchCancel","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","touch","_point","_startPoint","getPosition","Instance","test","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Node, NodeEventType, Prefab, UIOpacity, UITransform, Vec3 } from 'cc';\nimport { BlockEnum } from './BlockEnum';\nimport { GameController } from './GameController';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Block')\nexport class Block extends Component {\n\n\n    type = Math.floor(Math.random() * 16);\n    rotation = 0;\n\n    @property({\n        type: Prefab,\n    })\n    GridPrefab: Prefab;\n\n    grids = [];\n\n\n    width = 0;\n    height = 0;\n\n    start() {\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n\n        let data = BlockEnum.getRotation(this.type, this.rotation);\n\n        this.width = 160;\n        this.height = 160;\n\n        this.node.getComponent(UITransform).width = 80 * 2;\n        this.node.getComponent(UITransform).height = 80 * 2;\n        console.log(data);\n\n        for (let i = 0; i < data.length; i++) {\n            let node = instantiate(this.GridPrefab);\n            let x = (data[i] % 8) * 80 + 40;\n            let y = Math.floor(data[i] / 8) * 80 + 40;\n            node.setPosition(new Vec3(x, y, 0));\n            this.node.addChild(node);\n            node.getComponent(UIOpacity).opacity = 255;\n            this.grids.push(node);\n        }\n\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n\n    }\n\n    public touchStart(event) {\n        this.node.off(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.on(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.on(NodeEventType.TOUCH_MOVE, this.touchMove, this, true);\n        this.node.on(NodeEventType.TOUCH_END, this.touchEnd, this);\n        console.log(\"start\");\n    }\n\n    public touchMove(event) {\n        // console.log(event.touch);\n        this.node.setPosition(new Vec3(event.touch._point.x - 480,\n            event.touch._point.y - event.touch._startPoint.y));\n    }\n\n    public touchEnd(event) {\n        console.log(\"end\");\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.off(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.off(NodeEventType.TOUCH_MOVE, this.touchMove, this);\n        this.node.off(NodeEventType.TOUCH_END, this.touchEnd, this);\n        this.node.getComponent(UIOpacity).opacity = 0;\n    }\n\n    public touchCancel(event) {\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);\n        this.node.off(NodeEventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.node.off(NodeEventType.TOUCH_MOVE, this.touchMove, this);\n        this.node.off(NodeEventType.TOUCH_END, this.touchEnd, this);\n        console.log(\"cancel\");\n        this.node.getComponent(UIOpacity).opacity = 0;\n\n        console.log(this.node.getPosition());\n\n        GameController.Instance.test(this.node.getPosition(), { type: this.type, rotation: this.rotation })\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}