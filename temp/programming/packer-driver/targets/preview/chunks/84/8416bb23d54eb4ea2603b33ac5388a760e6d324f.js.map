{"version":3,"sources":["file:///Users/hanchuang/Games/RotateBlock/assets/src/GameArea.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","Grid","ccclass","property","GameArea","type","grids","start","createBlock","i","node","GridPrefab","x","y","Math","floor","setPosition","getChildByName","addChild","push","getComponent","hide","getGridByPosition","pos","nearest","temp","console","log","getPosition","distance","sqrt","pow","show"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA4BC,MAAAA,W,OAAAA,W;AAA4BC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,I,OAAAA,I;;AACvFC,MAAAA,I,iBAAAA,I;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAGjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAOHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEN;AADA,OAAD,C,2BAPb,MACaK,QADb,SAC8BP,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA,eAWpCS,KAXoC,GAW5B,EAX4B;AAAA;;AACpCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AAEH;;AASMA,QAAAA,WAAW,GAAG;AACjB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,gBAAIC,IAAI,GAAGZ,WAAW,CAAC,KAAKa,UAAN,CAAtB;AACA,gBAAIC,CAAC,GAAIH,CAAC,GAAG,CAAL,GAAU,EAAV,GAAe,GAAf,GAAqB,EAA7B;AACA,gBAAII,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWN,CAAC,GAAG,CAAf,IAAoB,EAApB,GAAyB,GAAzB,GAA+B,EAAvC;AACAC,YAAAA,IAAI,CAACM,WAAL,CAAiB,IAAIhB,IAAJ,CAASY,CAAT,EAAYC,CAAZ,EAAe,CAAf,CAAjB;AACA,iBAAKH,IAAL,CAAUO,cAAV,CAAyB,WAAzB,EAAsCC,QAAtC,CAA+CR,IAA/C;AACA,iBAAKJ,KAAL,CAAWa,IAAX,CAAgBT,IAAhB;AACAA,YAAAA,IAAI,CAACU,YAAL;AAAA;AAAA,8BAAwBC,IAAxB;AAGH;AACJ;;AAEMC,QAAAA,iBAAiB,CAACC,GAAD,EAAM;AAC1B,cAAIC,OAAO,GAAG,CAAd;AACA,cAAIC,IAAJ;;AACA,eAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBiB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWG,CAAX,EAAcmB,WAAd,EAAZ;AACA,gBAAIC,QAAQ,GAAGf,IAAI,CAACgB,IAAL,CACXhB,IAAI,CAACiB,GAAL,CAASR,GAAG,CAACX,CAAJ,GAAQ,KAAKN,KAAL,CAAWG,CAAX,EAAcmB,WAAd,GAA4BhB,CAA7C,EAAgD,CAAhD,IACEE,IAAI,CAACiB,GAAL,CAASR,GAAG,CAACX,CAAJ,GAAQ,KAAKN,KAAL,CAAWG,CAAX,EAAcmB,WAAd,GAA4BhB,CAA7C,EAAgD,CAAhD,CAFS,CAAf;AAIAc,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,gBAAIA,QAAQ,GAAGL,OAAf,EAAwB;AACpBA,cAAAA,OAAO,GAAGK,QAAV;AACAJ,cAAAA,IAAI,GAAG,KAAKnB,KAAL,CAAWG,CAAX,CAAP;AACH;AACJ;;AACDgB,UAAAA,IAAI,CAACL,YAAL;AAAA;AAAA,4BAAwBY,IAAxB;AACH;;AA3CmC,O","sourcesContent":["import { _decorator, Component, DistanceJoint2D, instantiate, NodeEventType, Prefab, UIOpacity, Vec3 } from \"cc\";\nimport { Grid } from \"./Grid\";\nimport { GameController } from \"./GameController\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameArea')\nexport class GameArea extends Component {\n    start() {\n        this.createBlock();\n\n    }\n\n    @property({\n        type: Prefab,\n    })\n    GridPrefab: Prefab;\n\n    grids = [];\n\n    public createBlock() {\n        for (let i = 0; i < 64; i++) {\n            let node = instantiate(this.GridPrefab);\n            let x = (i % 8) * 80 - 320 + 40;\n            let y = Math.floor(i / 8) * 80 - 320 + 40;\n            node.setPosition(new Vec3(x, y, 0));\n            this.node.getChildByName(\"Container\").addChild(node);\n            this.grids.push(node);\n            node.getComponent(Grid).hide();\n\n\n        }\n    }\n\n    public getGridByPosition(pos) {\n        let nearest = 0;\n        let temp;\n        for (let i = 0; i < 64; i++) {\n            console.log(this.grids[i].getPosition());\n            let distance = Math.sqrt(\n                Math.pow(pos.x - this.grids[i].getPosition().x, 2)\n                + Math.pow(pos.x - this.grids[i].getPosition().x, 2)\n            )\n            console.log(distance);\n            if (distance < nearest) {\n                nearest = distance;\n                temp = this.grids[i];\n            }\n        }\n        temp.getComponent(Grid).show();\n    }\n}\n\n\n"]}